# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Hashicorp Vault Integration

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - uses: actions/checkout@v2
    - name: Login to Vault
      id: login
      uses: hashicorp/vault-action@v1
      with:
        address: http://127.0.0.1:8200
        role_id: ${{ secrets.ROLE_ID }}
        secret_id: ${{ secrets.SECRET_ID }}
        
    - name: Retrieve secret from Vault
      id: retrieve_secret
      uses: hashicorp/vault-action@v1
      with:
        address: http://127.0.0.1:8200
        path: secret/data/docker
        token: ${{ steps.login.outputs.token }}
    - name: Set output variables
      env:
        DOCKERHUB_USERNAME: ${{ steps.retrieve_secret.outputs.data.secret_1 }}
        DOCKERHUB_TOKEN: ${{ steps.retrieve_secret.outputs.data.secret_2 }}
      
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.8.2
        
    - name: Build JAR file
      run: mvn -B package --file pom.xml 
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
        
    - name: Push to dockerhub 
      run: |
       docker build -t ${{ env.DOCKERHUB_USERNAME }}/first_image:latest .
       docker push ${{ env.DOCKERHUB_USERNAME }}/first_image

